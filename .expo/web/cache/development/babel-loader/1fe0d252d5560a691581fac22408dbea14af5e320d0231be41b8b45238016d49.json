{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bk399\\\\Documents\\\\proyecto\\\\PF\\\\components\\\\CategoryGridTile.js\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CategoryGridTile({\n  title,\n  color,\n  onPress\n}) {\n  return _jsxDEV(View, {\n    style: [styles.gridItem, {\n      backgroundColor: color\n    }],\n    children: _jsxDEV(Pressable, {\n      android_ripple: {\n        color: '#ccc'\n      },\n      style: ({\n        pressed\n      }) => [styles.button, pressed ? styles.buttonPressed : null],\n      onPress: onPress,\n      children: _jsxDEV(View, {\n        style: styles.innerContainer,\n        children: _jsxDEV(Text, {\n          style: styles.title,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\nconst styles = StyleSheet.create({\n  gridItem: {\n    flex: 1,\n    margin: 16,\n    height: 150,\n    borderRadius: 8,\n    elevation: 4,\n    backgroundColor: 'white',\n    shadowColor: 'black',\n    shadowOpacity: 0.25,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 8,\n    overflow: Platform.OS === 'android' ? 'hidden' : 'visible'\n  },\n  button: {\n    flex: 1\n  },\n  buttonPressed: {\n    opacity: 0.5\n  },\n  innerContainer: {\n    flex: 1,\n    padding: 16,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    fontWeight: 'bold',\n    fontSize: 18\n  }\n});\nexport default CategoryGridTile;","map":{"version":3,"names":["CategoryGridTile","title","color","onPress","_jsxDEV","View","style","styles","gridItem","backgroundColor","children","Pressable","android_ripple","pressed","button","buttonPressed","innerContainer","Text","fileName","_jsxFileName","lineNumber","columnNumber","StyleSheet","create","flex","margin","height","borderRadius","elevation","shadowColor","shadowOpacity","shadowOffset","width","shadowRadius","overflow","Platform","OS","opacity","padding","justifyContent","alignItems","fontWeight","fontSize"],"sources":["C:/Users/bk399/Documents/proyecto/PF/components/CategoryGridTile.js"],"sourcesContent":["import { View, Pressable, Text, StyleSheet, Platform } from \"react-native\"\r\n\r\nfunction CategoryGridTile({title, color, onPress}){\r\n    return (\r\n        <View style={[styles.gridItem, { backgroundColor: color}]}>\r\n            <Pressable android_ripple={{color: '#ccc'}} \r\n                       style={({ pressed }) => [styles.button, pressed ? styles.buttonPressed : null, ]} \r\n                       onPress={onPress}>\r\n                <View style={styles.innerContainer}>\r\n                    <Text style={styles.title}>\r\n                        {title}\r\n                    </Text>\r\n                </View>\r\n            </Pressable>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    gridItem: {\r\n        flex: 1,\r\n        margin: 16,\r\n        height: 150,\r\n        borderRadius: 8,\r\n        elevation: 4,\r\n        backgroundColor: 'white',\r\n        shadowColor: 'black',\r\n        shadowOpacity: 0.25,\r\n        shadowOffset: { width: 0, height: 2},\r\n        shadowRadius: 8,\r\n        overflow: Platform.OS === 'android' ? 'hidden' : 'visible'\r\n    },\r\n    button: {\r\n        flex: 1\r\n    },\r\n    buttonPressed: {\r\n        opacity: 0.5\r\n    },\r\n    innerContainer: {\r\n        flex: 1,\r\n        padding: 16,\r\n        borderRadius: 8,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    title: {\r\n        fontWeight: 'bold',\r\n        fontSize: 18,\r\n    }\r\n})\r\n\r\nexport default CategoryGridTile"],"mappings":";;;;;;;AAEA,SAASA,gBAAgBA,CAAC;EAACC,KAAK;EAAEC,KAAK;EAAEC;AAAO,CAAC,EAAC;EAC9C,OACIC,OAAA,CAACC,IAAI;IAACC,KAAK,EAAE,CAACC,MAAM,CAACC,QAAQ,EAAE;MAAEC,eAAe,EAAEP;IAAK,CAAC,CAAE;IAAAQ,QAAA,EACtDN,OAAA,CAACO,SAAS;MAACC,cAAc,EAAE;QAACV,KAAK,EAAE;MAAM,CAAE;MAChCI,KAAK,EAAEA,CAAC;QAAEO;MAAQ,CAAC,KAAK,CAACN,MAAM,CAACO,MAAM,EAAED,OAAO,GAAGN,MAAM,CAACQ,aAAa,GAAG,IAAI,CAAI;MACjFZ,OAAO,EAAEA,OAAQ;MAAAO,QAAA,EACxBN,OAAA,CAACC,IAAI;QAACC,KAAK,EAAEC,MAAM,CAACS,cAAe;QAAAN,QAAA,EAC/BN,OAAA,CAACa,IAAI;UAACX,KAAK,EAAEC,MAAM,CAACN,KAAM;UAAAS,QAAA,EACrBT;QAAK;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEf;AAEA,MAAMd,MAAM,GAAGe,UAAU,CAACC,MAAM,CAAC;EAC7Bf,QAAQ,EAAE;IACNgB,IAAI,EAAE,CAAC;IACPC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,GAAG;IACXC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE,CAAC;IACZnB,eAAe,EAAE,OAAO;IACxBoB,WAAW,EAAE,OAAO;IACpBC,aAAa,EAAE,IAAI;IACnBC,YAAY,EAAE;MAAEC,KAAK,EAAE,CAAC;MAAEN,MAAM,EAAE;IAAC,CAAC;IACpCO,YAAY,EAAE,CAAC;IACfC,QAAQ,EAAEC,QAAQ,CAACC,EAAE,KAAK,SAAS,GAAG,QAAQ,GAAG;EACrD,CAAC;EACDtB,MAAM,EAAE;IACJU,IAAI,EAAE;EACV,CAAC;EACDT,aAAa,EAAE;IACXsB,OAAO,EAAE;EACb,CAAC;EACDrB,cAAc,EAAE;IACZQ,IAAI,EAAE,CAAC;IACPc,OAAO,EAAE,EAAE;IACXX,YAAY,EAAE,CAAC;IACfY,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EAChB,CAAC;EACDvC,KAAK,EAAE;IACHwC,UAAU,EAAE,MAAM;IAClBC,QAAQ,EAAE;EACd;AACJ,CAAC,CAAC;AAEF,eAAe1C,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}